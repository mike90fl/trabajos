using System;
using System.Collections.Generic;
using System.Text;
using System.Threading;

namespace ProgramacionAsincrona.Hilos
{​​
class Program
{​​
static void Main(string[] args)
{​​
// Se instancia una variable con la clase de apoyo 'Soldado'
var objSoldado = new Soldado();



// Se declaran los 2 hilos, estableciendo que la función a ejecutar será 'Soldado.ImprimeEnunciado'
Thread hilo1 = new Thread(objSoldado.ImprimeEnunciado);
Thread hilo2 = new Thread(objSoldado.ImprimeEnunciado);



// Se muestra el mensaje, desde el programa principal, que se llamarán a la ejecución de los hilos
// En la impresión de mensaje se especifica el identificador del hilo que se asigna internamente
Console.WriteLine("ID Hilo: {​​0}​​ => Se llama a la ejecución de los hilos desde el programa principal", Thread.CurrentThread.ManagedThreadId.ToString());



// Se llaman a ejecución los 2 hilos, y se pasa como parámetro el mensaje un hecho para imprimir
hilo1.Start("Primer enunciado : El 'Stormtrooper' es un soldado del Imperio");
hilo2.Start("Segundo enunciado: El 'Clonetrooper' es un soldado de la República");



// Se espera a que termine la ejecución de ambos hilos
while ((hilo1.IsAlive) || (hilo2.IsAlive))
{​​
}​​



// Una vez terminados, se muestra el mensaje de finalización
Console.WriteLine("ID Hilo: {​​0}​​ => Finalizó la ejecución de los hilos", Thread.CurrentThread.ManagedThreadId.ToString());
Console.ReadLine();
}​​
}​​



// Clase de apoyo que contiene la función que ejecutarán los hilos
public class Soldado
{​​
public void ImprimeEnunciado(object texto)
{​​
// Se muestra el mensaje de ejecución de la función
// En la impresión de mensaje se especifica el identificador del hilo que se asigna internamente
Console.WriteLine("ID Hilo: {​​0}​​ => {​​1}​​.", Thread.CurrentThread.ManagedThreadId.ToString(), texto.ToString());
}​​
}​​
}​​







try // Cuerpo de Intento de ejecucion
{​​
int[] numeros = {​​ 1, 2, 3, 4, 5, 6, 7, }​​;
Console.WriteLine(numeros[11]);



}​​
catch (Exception error)//Cuerpo de emergencia en caso de un error
{​​
Console.WriteLine("Syntax ERROR");
}​​




class Program
{​​
class Car
{​​
public string Modelo;
public string Marca;
public string Motor;
public int Año;
public string Color;
public string Piloto;
public int VelocidadMax;
public string Control;
public Car()
{​​
Modelo = "Mustang";
Marca = "Ford";
Motor = "5.0";
Año = 2003;
Color = "Rojo";
VelocidadMax = 330;
Control = "Facil";
Piloto = "Athos Salmeron";



}​​



static void Main(string[] args)
{​​
Car Ford = new Car(); // Instancia FORD (puede ser cualquier Nombre)
Console.WriteLine(Ford.Modelo);
Console.WriteLine(Ford.Año);
Console.WriteLine(Ford.Color);
Console.WriteLine(Ford.Motor);
Console.WriteLine(Ford.VelocidadMax);
Console.WriteLine(Ford.Control);
Console.WriteLine(Ford.Piloto);
}​​
}​​
}​​
